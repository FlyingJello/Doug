trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DotNetCoreCLI@2
  displayName: Build Doug
  inputs:
    command: 'build'
    projects: 'Doug/**.csproj'

- task: DotNetCoreCLI@2
  displayName: Build functions
  inputs:
    command: 'build'
    projects: 'Functions/**.csproj'

- task: DotNetCoreCLI@2
  displayName: Publish Doug
  inputs:
    command: 'publish'
    projects: 'Doug/**.csproj'
    publishWebProjects: true
    arguments: '-o $(build.artifactStagingDirectory)/doug'
    zipAfterPublish: false
    modifyOutputPath: false

- task: DotNetCoreCLI@2
  displayName: Publish functions
  inputs:
    command: 'publish'
    projects: 'Functions/**.csproj'
    publishWebProjects: true
    arguments: '-o $(build.artifactStagingDirectory)/functions'
    zipAfterPublish: false
    modifyOutputPath: false

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: 'doug-ui'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'doug-ui'
    customCommand: 'run generate'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'doug-ui/dist'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/dist'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'